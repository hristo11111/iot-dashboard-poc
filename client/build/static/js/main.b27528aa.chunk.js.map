{"version":3,"sources":["components/KPIsLineChart/KPIsLineChart.js","components/DeviceSelect/DeviceSelect.js","components/generic/Tile/Tile.js","components/generic/Echart/Echart.js","components/LatestValuesTile/LatestValuesTile.js","components/DetailsTile/DetailsTile.js","components/KPIsLineChart/KPISelect/KPISelect.js","App.js","reportWebVitals.js","index.js"],"names":["kpiData","DeviceSelect","device","onDeviceSelect","FormControl","InputLabel","id","Select","labelId","value","onChange","MenuItem","Tile","title","className","children","Paper","elevation","Echart","option","myChart","useRef","useEffect","chart","echarts","current","setOption","window","addEventListener","resize","removeEventListener","ref","style","height","width","optionTemperatures","xAxis","type","data","axisLabel","interval","rotate","yAxis","series","itemStyle","normal","barBorderRadius","LatestValuesTile","deviceId","pressure","strokeRate1","pressureOption","startAngle","endAngle","max","pointer","show","progress","overlap","roundCap","clip","borderWidth","borderColor","axisLine","lineStyle","splitLine","distance","length","axisTick","name","offsetCenter","detail","fontSize","color","borderRadius","formatter","strokeRate1Option","min","Skeleton","variant","DetailsTile","pumpHours","lastReportTime","isLoading","KPISelect","kpi","onKPISelect","KPIsLineChart","useState","setKPI","chartData","setCharData","subDays","Date","fromDate","handleFromDateChange","toDate","handleToDateChange","setIsLoading","fdate","format","tdate","fetch","headers","then","res","json","result","values","chartOption","map","record","replace","event","target","autoOk","label","InputAdornmentProps","position","App","setDevice","setPressure","setStrokeRate1","getPressure","a","getStrokeRate1","stroke_rate_1","setInterval","utils","DateFnsUtils","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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Ac,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAAkB,sBAAuB,aAAc,WAAc,KACrG,CAAC,8BAA+B,iBAA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","file":"static/js/main.b27528aa.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport KPISelect from './KPISelect/KPISelect';\nimport Tile from '../generic/Tile/Tile';\nimport Echart from '../generic/Echart/Echart';\nimport { subDays, format } from 'date-fns';\n\nimport \"./KPIsLineChart.scss\";\n\nlet kpiData = {\n  pump_hour: [\n    { \"iothub-enqueuedtime\": \"2020-01-01\", value: '2' },\n    { \"iothub-enqueuedtime\": \"2020-01-02\", value: '5' },\n    { \"iothub-enqueuedtime\": \"2020-01-03\", value: '22' },\n    { \"iothub-enqueuedtime\": \"2020-01-04\", value: '20' },\n    { \"iothub-enqueuedtime\": \"2020-01-05\", value: '7' },\n    { \"iothub-enqueuedtime\": \"2020-01-06\", value: '5' },\n    { \"iothub-enqueuedtime\": \"2020-01-07\", value: '9' },\n    { \"iothub-enqueuedtime\": \"2020-01-08\", value: '7' },\n    { \"iothub-enqueuedtime\": \"2020-01-09\", value: '6' },\n    { \"iothub-enqueuedtime\": \"2020-01-10\", value: '5' }\n  ],\n  pump_minute: [\n    { \"iothub-enqueuedtime\": \"2020-01-01\", value: '12' },\n    { \"iothub-enqueuedtime\": \"2020-01-02\", value: '22' },\n    { \"iothub-enqueuedtime\": \"2020-01-03\", value: '22' },\n    { \"iothub-enqueuedtime\": \"2020-01-04\", value: '32' },\n    { \"iothub-enqueuedtime\": \"2020-01-05\", value: '43' },\n    { \"iothub-enqueuedtime\": \"2020-01-06\", value: '23' },\n    { \"iothub-enqueuedtime\": \"2020-01-07\", value: '12' },\n    { \"iothub-enqueuedtime\": \"2020-01-08\", value: '9' },\n    { \"iothub-enqueuedtime\": \"2020-01-09\", value: '14' },\n    { \"iothub-enqueuedtime\": \"2020-01-10\", value: '15' }\n  ],\n  stroke_count_1: [\n    { \"iothub-enqueuedtime\": \"2020-01-01\", value: '133' },\n    { \"iothub-enqueuedtime\": \"2020-01-02\", value: '125' },\n    { \"iothub-enqueuedtime\": \"2020-01-03\", value: '100' },\n    { \"iothub-enqueuedtime\": \"2020-01-04\", value: '99' },\n    { \"iothub-enqueuedtime\": \"2020-01-05\", value: '43' },\n    { \"iothub-enqueuedtime\": \"2020-01-06\", value: '54' },\n    { \"iothub-enqueuedtime\": \"2020-01-07\", value: '54' },\n    { \"iothub-enqueuedtime\": \"2020-01-08\", value: '123' },\n    { \"iothub-enqueuedtime\": \"2020-01-09\", value: '22' },\n    { \"iothub-enqueuedtime\": \"2020-01-10\", value: '109' }\n  ]\n};\n\nkpiData = [\n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 137}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 121}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 134}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 124}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 132}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 120}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 132}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 138}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 131}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 121}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 122}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 125}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 125}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 136}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 125}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 136}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 128}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 131}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 134}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 133}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 137}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 128}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 122}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 120}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 120}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 127}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 135}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 130}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 123}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 131}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 124}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 121}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 126}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 124}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 133}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 128}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 137}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 126}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 137}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 124}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 123}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 130}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 138}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 131}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 138}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 130}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 121}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 126}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 136}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 135}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 121}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 128}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 125}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 130}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 120}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 123}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 120}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 124}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 132}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 138}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 124}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 131}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 138}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 126}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 132}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 122}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 135}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 123}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 132}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 126}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 125}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 126}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 127}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 122}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 132}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 138}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-10', 'cv_1l_temp': 140}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 138}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 125}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 132}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 138}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 135}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 128}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 129}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 130}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 137}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 131}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 132}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 136}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 999}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 129}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 139}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 139}, \n  {'iothub-connection-device-id': 'MyPythonDevice', 'iothub-enqueuedtime': '2021-01-11', 'cv_1l_temp': 132}\n];\n\nconst KPIsLineChart = ({ deviceId }) => {\n  const [kpi, setKPI] = useState('pump_hour');\n  const [chartData, setCharData] = useState(kpiData);\n  const [fromDate, handleFromDateChange] = useState(subDays(new Date(), 10));\n  const [toDate, handleToDateChange] = useState(new Date());\n  const [isLoading, setIsLoading] = useState(false);\n  const onKPISelectedHandler = (event) => {\n    setKPI(event.target.value);\n    setCharData(kpiData[event.target.value]);\n  };\n\n  useEffect(() => {\n    const fdate = format(fromDate, 'ddMMy');\n    const tdate = format(toDate, 'ddMMy');\n    setIsLoading(true);\n\n    fetch(`https://gettelemetrydatadocker.azurewebsites.net/api/GetData?deviceId=MyPythonDevice&function=GetHistoricalValue&kpi=${kpi}&datefrom=${fdate}&dateto=${tdate}`,\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    )\n    .then(res => res.json())\n    .then(\n      (result) => {\n        setIsLoading(false);\n        setCharData(result && result[0] ? result[0].values : []);\n      }\n    )\n  }, [fromDate, toDate, kpi]);\n\n  const chartOption = {\n    xAxis: {\n        type: 'category',\n        data: chartData && chartData.map((record) => format(new Date(record['iothub-enqueuedtime']), 'dd/MM/y HH:mm:ss').replace(' ', '\\n')),\n        axisLabel: { interval: 32, width: '10' }\n    },\n    yAxis: {\n        type: 'value'\n    },\n    series: [{\n        data: chartData && chartData.map((record) => record[kpi]),\n        type: 'line'\n    }]\n  };\n\n  return (\n    <Tile title={`KPIs Historical Data: ${deviceId}`} className=\"kpis-line-chart\">\n      <div className=\"header\">\n        <KPISelect onKPISelect={onKPISelectedHandler} kpi={kpi} />\n        <KeyboardDatePicker \n          autoOk\n          variant=\"inline\"\n          label=\"Select from date\"\n          format=\"dd/MM/yyyy\"\n          value={fromDate} \n          InputAdornmentProps={{ position: \"start\" }}\n          onChange={handleFromDateChange}\n          className=\"line-chart-date-picker\"\n        />\n        <KeyboardDatePicker \n          autoOk\n          variant=\"inline\"\n          label=\"Select to date\"\n          format=\"dd/MM/yyyy\"\n          value={toDate} \n          InputAdornmentProps={{ position: \"start\" }}\n          onChange={handleToDateChange}\n          className=\"line-chart-date-picker\"\n        />\n      </div>\n      <div className=\"chart\" style={{ width: '100%', height: 300 }}>\n        {isLoading ? <Skeleton variant=\"rect\" height='80%' width=\"100%\" /> : chartData && chartData.length !== 0 ? <Echart option={chartOption} /> : 'No data'}\n      </div>\n    </Tile>\n  );\n};\n\nexport default KPIsLineChart;\n","import Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst DeviceSelect = ({ device, onDeviceSelect }) => {\n  return (\n    <FormControl>\n      <InputLabel id=\"device-select-label\">Device</InputLabel>\n      <Select\n        labelId=\"device-select-label\"\n        id=\"demo-simple-select\"\n        value={device}\n        onChange={onDeviceSelect}\n      >\n        <MenuItem value={'MyPythonDevice'}>My Python Device 1</MenuItem>\n        <MenuItem value={'MyPythonDevice2'}>My Python Device 2</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default DeviceSelect;\n","import Paper from '@material-ui/core/Paper';\n\nimport './Tile.scss';\n\nconst Tile = ({ title, className, children }) => {\n  return (\n    <Paper elevation={3}>\n      <div className={`tile-wrapper ${className}`}>\n        <div className=\"title\">{title}</div>\n        <div className=\"tile-content\">\n          {children}\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nexport default Tile;\n","import * as echarts from \"echarts\"\nimport { useRef, useEffect } from 'react';\n\nconst Echart = ({ option }) => {\n  const myChart = useRef(null);\n\n  useEffect(() => {\n    const chart = echarts.init(myChart.current);\n    chart.setOption(option);\n\n    window.addEventListener(\"resize\", () => chart.resize());\n\n    return window.removeEventListener(\"resize\", () => chart.resize());\n  }, [option])\n\n  return (\n    <div\n      ref={myChart}\n      style={{\n        height: \"100%\",\n        width:\"100%\"\n      }}\n    ></div>\n  );\n};\n\nexport default Echart;\n","import './LatestValuesTile.scss';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Tile from '../generic/Tile/Tile';\nimport Echart from '../generic/Echart/Echart';\n\n\n\nconst optionTemperatures = {\n  xAxis: {\n      type: 'category',\n      data: ['CV Left 1', 'CV Left 2', 'CV Right 1', 'CV Right 2', 'Oil'],\n      axisLabel: { interval: 0, rotate: 30 }\n  },\n  yAxis: {\n      type: 'value'\n  },\n  series: [{\n      data: [120, 200, 150, 80, 70],\n      type: 'bar',\n      itemStyle: {\n        normal: {\n            barBorderRadius: [5, 5, 0 ,0 ]\n        }\n      }\n  }]\n};\n\nconst LatestValuesTile = ({ deviceId, pressure, strokeRate1 }) => {\n  const pressureOption = {\n    series: [{\n        type: 'gauge',\n        startAngle: 90,\n        endAngle: -270,\n        max: 160,\n        pointer: {\n            show: false\n        },\n        progress: {\n            show: true,\n            overlap: false,\n            roundCap: true,\n            clip: false,\n            itemStyle: {\n                borderWidth: 1,\n                borderColor: '#464646'\n            }\n        },\n        axisLine: {\n            lineStyle: {\n                width: 15\n            }\n        },\n        splitLine: {\n            show: false,\n            distance: 0,\n            length: 10\n        },\n        axisTick: {\n            show: true\n        },\n        axisLabel: {\n            show: false,\n            distance: 40\n        },\n        data: [{\n            value: pressure,\n            name: 'Output pressure',\n            title: {\n                offsetCenter: ['0%', '-25%']\n            },\n            detail: {\n                offsetCenter: ['0%', '10%']\n            }\n        }\n        ],\n        title: {\n            fontSize: 14\n        },\n        detail: {\n            width: 50,\n            height: 24,\n            fontSize: 14,\n            color: 'auto',\n            borderColor: 'auto',\n            borderRadius: 20,\n            borderWidth: 1,\n            formatter: '{value}'\n        }\n    }]\n  };\n\n  const strokeRate1Option = {\n    series: [{\n        type: 'gauge',\n        startAngle: 90,\n        endAngle: -270,\n        min: 20,\n        max: 60,\n        pointer: {\n            show: true\n        },\n        progress: {\n            show: true,\n            overlap: false,\n            roundCap: false,\n            clip: false\n        },\n        axisLine: {\n            lineStyle: {\n                width: 5\n            }\n        },\n        axisTick: {\n            show: false\n        },\n        splitLine: {\n            length: 5,\n            lineStyle: {\n                width: 2,\n                color: '#999'\n            }\n        },\n        axisLabel: {\n            distance: -45,\n            color: '#999',\n            fontSize: 12,\n            formatter: function (value) {\n                if (value === 20) {\n                    return '';\n                }\n                return value + '°';\n            }\n        },\n        data: [{\n            value: strokeRate1,\n            name: 'Stroke rate 1',\n            title: {\n                offsetCenter: ['0%', '-145%']\n            },\n            detail: {\n                offsetCenter: ['0%', '35%']\n            }\n        }\n        ],\n        title: {\n            fontSize: 14\n        },\n        detail: {\n            width: 50,\n            height: 24,\n            fontSize: 14,\n            color: 'auto',\n            borderColor: 'auto',\n            borderRadius: 20,\n            borderWidth: 1,\n            formatter: '{value}'\n        }\n    }]\n  };\n  return (\n    <Tile title={`Waterjet readings: ${deviceId}`}> \n      <div className=\"latest-values-tile\">\n        <div className=\"pressure-gauge\" style={{ width: '25%', height: 350 }}>\n          {pressure === -1 ? <Skeleton variant=\"rect\" height='80%' width=\"100%\" /> : <Echart option={pressureOption} />}\n        </div>\n        <div className=\"temperature-bar-chart\" style={{ width: '50%', height: 350 }} >\n          <Echart option={optionTemperatures}/>\n        </div>\n        <div className=\"stroke-rate-gauge\" style={{ width: '25%', height: 350 }}>\n          {strokeRate1 === -1 ? <Skeleton variant=\"rect\" height='80%' width=\"100%\" /> : <Echart option={strokeRate1Option} />}\n        </div>\n      </div>\n    </Tile>\n  );\n};\n\nexport default LatestValuesTile;\n","\nimport Tile from '../generic/Tile/Tile';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport './DetailsTile.scss';\n\nconst DetailsTile = ({ pumpHours, lastReportTime, isLoading }) => {\n  return (\n    <div className=\"details-wrapper\">\n      <Tile title=\"Current Pump Hours\">\n        {pumpHours}\n      </Tile>\n      <Tile title=\"Status\" className=\"status-tile\">\n        Running\n      </Tile>\n      <Tile title=\"Last Report Time\">\n        {isLoading ? <Skeleton /> : lastReportTime}\n      </Tile>\n    </div>\n  );\n};\n\nexport default DetailsTile;\n","import Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst KPISelect = ({ kpi, onKPISelect }) => {\n  return (\n    <FormControl>\n      <InputLabel id=\"kpi-select-label\">KPI</InputLabel>\n      <Select\n        labelId=\"kpi-select-label\"\n        value={kpi}\n        onChange={onKPISelect}\n      >\n        <MenuItem value={'pump_hour'}>Pump Hours</MenuItem>\n        <MenuItem value={'pump_minute'}>Pump Minute</MenuItem>\n        <MenuItem value={'stroke_count_1'}>Stroke count 1</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default KPISelect;\n","import { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Paper from '@material-ui/core/Paper';\nimport DeviceSelect from './components/DeviceSelect/DeviceSelect';\nimport LatestValuesTile from './components/LatestValuesTile/LatestValuesTile';\nimport DetailsTile from './components/DetailsTile/DetailsTile';\nimport KPIsLineChart from './components/KPIsLineChart/KPIsLineChart';\n\nimport './App.scss';\n\nconst sitesArray = {\n  pressure: 'https://gettelemetrydatadocker.azurewebsites.net/api/GetData?deviceId=MyPythonDevice&function=GetCurrentValue&kpi=pressure',\n  // cv_1l_temp: 'https://gettelemetrydatadocker.azurewebsites.net/api/GetData?deviceId=MyPythonDevice&function=GetCurrentValue&kpi=cv_1l_temp',\n  // cv_2l_temp: 'https://gettelemetrydatadocker.azurewebsites.net/api/GetData?deviceId=MyPythonDevice&function=GetCurrentValue&kpi=cv_2l_temp',\n  // cv_1r_temp: 'https://gettelemetrydatadocker.azurewebsites.net/api/GetData?deviceId=MyPythonDevice&function=GetCurrentValue&kpi=cv_1r_temp',\n  // cv_2r_temp: 'https://gettelemetrydatadocker.azurewebsites.net/api/GetData?deviceId=MyPythonDevice&function=GetCurrentValue&kpi=cv_2r_temp',\n  // oil_temp: 'https://gettelemetrydatadocker.azurewebsites.net/api/GetData?deviceId=MyPythonDevice&function=GetCurrentValue&kpi=oil_temp',\n  stroke_rate_1: 'https://gettelemetrydatadocker.azurewebsites.net/api/GetData?deviceId=MyPythonDevice&function=GetCurrentValue&kpi=stroke_rate_1',\n  // pump_hour: 'https://gettelemetrydatadocker.azurewebsites.net/api/GetData?deviceId=MyPythonDevice&function=GetCurrentValue&kpi=pump_hour'\n}\n\nfunction App() {\n  const [device, setDevice] = useState('MyPythonDevice');\n  const [pressure, setPressure] = useState(-1);\n  const [strokeRate1, setStrokeRate1] = useState(-1);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getPressure = async () => {\n    const pressureResp = await fetch(`https://gettelemetrydatadocker.azurewebsites.net/api/GetData?deviceId=MyPythonDevice&function=GetCurrentValue&kpi=pressure`,\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n    pressureResp.json().then(res => { setPressure(res.pressure) });\n  }\n\n  const getStrokeRate1 = async () => {\n    setIsLoading(true);\n    const strokeRate1Resp = await fetch(`https://gettelemetrydatadocker.azurewebsites.net/api/GetData?deviceId=MyPythonDevice&function=GetCurrentValue&kpi=stroke_rate_1`,\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      strokeRate1Resp.json().then(res => { setStrokeRate1(res.stroke_rate_1); setIsLoading(false) });\n  }\n\n  useEffect(() => {\n    setInterval(() => {\n      getPressure();\n      getStrokeRate1();\n    }, 20000);\n\n    getPressure();\n    getStrokeRate1()\n  }, []);\n\n  const onDeviceSelectHandler = (event) => {\n    setDevice(event.target.value);\n  }\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <div className=\"choose-device\">\n            <DeviceSelect device={device} onDeviceSelect={onDeviceSelectHandler} />\n          </div>\n          <Paper>\n            <div className=\"dashboard\">\n              <div className=\"left\">\n                <KPIsLineChart deviceId={device} />\n                <LatestValuesTile deviceId={device} pressure={pressure} strokeRate1={strokeRate1} />\n              </div>\n              <div className=\"right\">\n                <DetailsTile pumpHours={3313} lastReportTime={format(new Date(), 'dd-MM-yyyy, HH:mm:ss')} isLoading={isLoading} />\n              </div>\n            </div>\n          </Paper>\n        </div>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}